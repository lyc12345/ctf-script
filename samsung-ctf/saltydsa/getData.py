from hashlib import *
from gmpy import *
from pwn import *
from Crypto.Util.number import long_to_bytes, bytes_to_long
x = 167169564094822147743573888300656418783

salt = md5(long_to_bytes(x)).digest()

d1 = open('md5_data1').read()
d2 = open('md5_data2').read()

#
now = 'saltsaltsalt'+salt
now = now + '\x80'+'\x00'*(55-len(now))+p64(len(now)*8)
now = now[12:]

out1 = now + d1
print out1.encode('hex')
out2 = now + d2
print out2.encode('hex')

# ===========================================================

r1,s1 = 256636874561534256622688543451124309852,129652822535864407497968560671222741588
r2,s2 = 256636874561534256622688543451124309852,121224970910965689093964525650256262964

p = 1017403504773779998461252387104831427061895725400072741425584079775518538774371596186491247906773116810742238884633247918872644122896697777667332681599291120762345381707270595752571690880414180513961247736681539027244781939656158891
q = 336850594159817259632543308508892807217

m1 = int(md5(out1).hexdigest(),16)
m2 = int(md5(out2).hexdigest(),16)

# s1*(m2+x*r2) = s2*(m1+x*r1)
# s1*m2-s2*m1 = (s2*r1-s1*r2)x

right = s2*r1-s1*r2
left  = s1*m2-s2*m1

right %= q
left %= q
print left
print right
x = left*invert(right,q)
x %= q
print x

# =====================

g = 997714187683524266715837099875672774470066305302354780752327720575300022340187144676717809874490674891833006980201779433398670739668677095166528572373500574998344439174857106835722768162677436442712064106353183760776224068141068372

y = 410162012259494006234637838183030255022065182500530089164165066214477406098431151341732596565407195253633171862631096482757971303601447021205395280707322331159752576223474552130872324113580026462400147406740785406069139159470266102


r = g%p%q
s = int(md5('admin').hexdigest(),16)+x*r
s = s%q
print 'admin'.encode('hex')
print r,s

# =====================
# SCTF{You_really_have_to_generate_k_in_DSA_carefully}

