from hashlib import *
from Crypto.Util.number import long_to_bytes, bytes_to_long
from gmpy import invert
r,s = 29713003399148646343942847944277437355,32830265922473337335941347732069048635
m = int(md5('').hexdigest(),16)
x = 167169564094822147743573888300656418783
p = 1489072590043045494705426528358151222455542737049917128516908355671507095296974405513033979110269523218359917557305242637069883614432158594987331330275140747070463821698581884501369023295403664365359424960195374047883599730216607451
q = 314758690313540757677672167194405510181
temp = m+x*r
k = (invert(s,q)*temp)%q
k = long_to_bytes(k)

def out(k):
  return ''.join(['%x' % ord(a) for a in k[::-1]])

print out(k[:4])
print out(k[4:8])
print out(k[8:12])
print out(k[12:])
