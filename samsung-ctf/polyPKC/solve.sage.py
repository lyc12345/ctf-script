
# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
data = [ s.strip().split(':')[-_sage_const_1 ] for s in open('enc').readlines()]
exec 'order = ' + data[_sage_const_0 ]
exec 'key = ' + data[_sage_const_1 ]
exec 'N = ' + data[_sage_const_2 ]
exec 'result =' + data[_sage_const_3 ]

Zn = Zmod(N)
PR = PolynomialRing(Zn, names=('x',)); (x,) = PR._first_ngens(1)

eq1 = x**order-_sage_const_1 
eq2 = _sage_const_0 
for i in xrange(len(key)):
  eq2 += key[i]*x**i

while eq2 != _sage_const_0 :
  r = eq1 % eq2
  eq1,eq2 = eq2, r

eq = eq1.monic()
t = Integer(N - eq.coefficients()[_sage_const_0 ])

ans = _sage_const_0  
for i in xrange(len(result)):
  ans = (ans + result[i]*t**i)%N

print hex(ans).decode('hex')

