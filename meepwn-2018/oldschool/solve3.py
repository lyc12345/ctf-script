'''
sage: tmp.nbits()
1024
sage: p = next_prime(1337*tmp + randint(2, 2**512))
sage: q = next_prime(7331*tmp + randint(2, 2**512))
sage: n = p * q
'''

n = 139713689065649193238602077859960857468098993135221000039102730899547298927683962573562384690733560045229965690142223836971463635696618075169874035306125645096696682021038045841133380609849851790395591047968701652975799368468556274243238594974251982826875184190103880810901174411829635180158201629467635591810569775155092318675639049754541256014635438864801255760305914815607547032463796789980267388517787537827413511219215383011915710116907720461035152786018808394261912036183662986050428253151429051345333273081222126466016921456969903177087878715836995228953335073770833282613911892360743789453583070756075529298371748549

tmp = int(sqrt(n/1337*7331))

p = tmp - 2**512
F.<x> = PolynomialRing(Zmod(n), implementation='NTL')
f = x-p
roots = f.small_roots(X=2**512, beta=0.3)
for root in roots:
  p = p-int(root)
  if n%p == 0: 
    print p 
    break
